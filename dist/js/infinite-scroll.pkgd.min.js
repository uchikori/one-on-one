"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e4) { throw _e4; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e5) { didErr = true; err = _e5; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * Infinite Scroll PACKAGED v4.0.1
 * Automatically add next page
 *
 * Licensed GPLv3 for open source use
 * or Infinite Scroll Commercial License for commercial use
 *
 * https://infinite-scroll.com
 * Copyright 2018-2020 Metafizzy
 */
!function (t, e) {
  "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && module.exports ? module.exports = e(t, require("jquery")) : t.jQueryBridget = e(t, t.jQuery);
}(window, function (t, e) {
  var i = t.console,
      n = void 0 === i ? function () {} : function (t) {
    i.error(t);
  };
  return function (i, o, s) {
    (s = s || e || t.jQuery) && (o.prototype.option || (o.prototype.option = function (t) {
      t && (this.options = Object.assign(this.options || {}, t));
    }), s.fn[i] = function (t) {
      for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        e[_key - 1] = arguments[_key];
      }

      return "string" == typeof t ? function (t, e, o) {
        var r,
            l = "$().".concat(i, "(\"").concat(e, "\")");
        return t.each(function (t, h) {
          var a = s.data(h, i);
          if (!a) return void n("".concat(i, " not initialized. Cannot call method ").concat(l));
          var c = a[e];
          if (!c || "_" == e.charAt(0)) return void n("".concat(l, " is not a valid method"));
          var u = c.apply(a, o);
          r = void 0 === r ? u : r;
        }), void 0 !== r ? r : t;
      }(this, t, e) : (r = t, this.each(function (t, e) {
        var n = s.data(e, i);
        n ? (n.option(r), n._init()) : (n = new o(e, r), s.data(e, i, n));
      }), this);
      var r;
    });
  };
}), function (t, e) {
  "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && module.exports ? module.exports = e() : t.EvEmitter = e();
}("undefined" != typeof window ? window : void 0, function () {
  function t() {}

  var e = t.prototype;
  return e.on = function (t, e) {
    if (!t || !e) return this;
    var i = this._events = this._events || {},
        n = i[t] = i[t] || [];
    return n.includes(e) || n.push(e), this;
  }, e.once = function (t, e) {
    if (!t || !e) return this;
    this.on(t, e);
    var i = this._onceEvents = this._onceEvents || {};
    return (i[t] = i[t] || {})[e] = !0, this;
  }, e.off = function (t, e) {
    var i = this._events && this._events[t];
    if (!i || !i.length) return this;
    var n = i.indexOf(e);
    return -1 != n && i.splice(n, 1), this;
  }, e.emitEvent = function (t, e) {
    var i = this._events && this._events[t];
    if (!i || !i.length) return this;
    i = i.slice(0), e = e || [];
    var n = this._onceEvents && this._onceEvents[t];

    var _iterator = _createForOfIteratorHelper(i),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var o = _step.value;
        n && n[o] && (this.off(t, o), delete n[o]), o.apply(this, e);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return this;
  }, e.allOff = function () {
    return delete this._events, delete this._onceEvents, this;
  }, t;
}), function (t, e) {
  "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && module.exports ? module.exports = e(t) : t.fizzyUIUtils = e(t);
}(void 0, function (t) {
  var e = {
    extend: function extend(t, e) {
      return Object.assign(t, e);
    },
    modulo: function modulo(t, e) {
      return (t % e + e) % e;
    },
    makeArray: function makeArray(t) {
      if (Array.isArray(t)) return t;
      if (null == t) return [];
      return "object" == _typeof(t) && "number" == typeof t.length ? _toConsumableArray(t) : [t];
    },
    removeFrom: function removeFrom(t, e) {
      var i = t.indexOf(e);
      -1 != i && t.splice(i, 1);
    },
    getParent: function getParent(t, e) {
      for (; t.parentNode && t != document.body;) {
        if ((t = t.parentNode).matches(e)) return t;
      }
    },
    getQueryElement: function getQueryElement(t) {
      return "string" == typeof t ? document.querySelector(t) : t;
    },
    handleEvent: function handleEvent(t) {
      var e = "on" + t.type;
      this[e] && this[e](t);
    },
    filterFindElements: function filterFindElements(t, i) {
      return (t = e.makeArray(t)).filter(function (t) {
        return t instanceof HTMLElement;
      }).reduce(function (t, e) {
        var _t;

        if (!i) return t.push(e), t;
        e.matches(i) && t.push(e);
        var n = e.querySelectorAll(i);
        return t = (_t = t).concat.apply(_t, _toConsumableArray(n));
      }, []);
    },
    debounceMethod: function debounceMethod(t, e, i) {
      i = i || 100;
      var n = t.prototype[e],
          o = e + "Timeout";

      t.prototype[e] = function () {
        var _this = this;

        clearTimeout(this[o]);
        var t = arguments;
        this[o] = setTimeout(function () {
          n.apply(_this, t), delete _this[o];
        }, i);
      };
    },
    docReady: function docReady(t) {
      var e = document.readyState;
      "complete" == e || "interactive" == e ? setTimeout(t) : document.addEventListener("DOMContentLoaded", t);
    },
    toDashed: function toDashed(t) {
      return t.replace(/(.)([A-Z])/g, function (t, e, i) {
        return e + "-" + i;
      }).toLowerCase();
    }
  },
      i = t.console;
  return e.htmlInit = function (n, o) {
    e.docReady(function () {
      var s = "data-" + e.toDashed(o),
          r = document.querySelectorAll("[".concat(s, "]")),
          l = t.jQuery;

      _toConsumableArray(r).forEach(function (t) {
        var e,
            r = t.getAttribute(s);

        try {
          e = r && JSON.parse(r);
        } catch (e) {
          return void (i && i.error("Error parsing ".concat(s, " on ").concat(t.className, ": ").concat(e)));
        }

        var h = new n(t, e);
        l && l.data(t, o, h);
      });
    });
  }, e;
}), function (t, e) {
  "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && module.exports ? module.exports = e(t, require("ev-emitter"), require("fizzy-ui-utils")) : t.InfiniteScroll = e(t, t.EvEmitter, t.fizzyUIUtils);
}(window, function (t, e, i) {
  var n = t.jQuery,
      o = {};

  function s(t, e) {
    var r = i.getQueryElement(t);

    if (r) {
      if ((t = r).infiniteScrollGUID) {
        var _i = o[t.infiniteScrollGUID];
        return _i.option(e), _i;
      }

      this.element = t, this.options = _objectSpread({}, s.defaults), this.option(e), n && (this.$element = n(this.element)), this.create();
    } else console.error("Bad element for InfiniteScroll: " + (r || t));
  }

  s.defaults = {}, s.create = {}, s.destroy = {};
  var r = s.prototype;
  Object.assign(r, e.prototype);
  var l = 0;
  r.create = function () {
    var t = this.guid = ++l;

    if (this.element.infiniteScrollGUID = t, o[t] = this, this.pageIndex = 1, this.loadCount = 0, this.updateGetPath(), this.getPath && this.getPath()) {
      this.updateGetAbsolutePath(), this.log("initialized", [this.element.className]), this.callOnInit();

      for (var _t2 in s.create) {
        s.create[_t2].call(this);
      }
    } else console.error("Disabling InfiniteScroll");
  }, r.option = function (t) {
    Object.assign(this.options, t);
  }, r.callOnInit = function () {
    var t = this.options.onInit;
    t && t.call(this, this);
  }, r.dispatchEvent = function (t, e, i) {
    this.log(t, i);
    var o = e ? [e].concat(i) : i;
    if (this.emitEvent(t, o), !n || !this.$element) return;
    var s = t += ".infiniteScroll";

    if (e) {
      var _i2 = n.Event(e);

      _i2.type = t, s = _i2;
    }

    this.$element.trigger(s, i);
  };
  var h = {
    initialized: function initialized(t) {
      return "on ".concat(t);
    },
    request: function request(t) {
      return "URL: ".concat(t);
    },
    load: function load(t, e) {
      return "".concat(t.title || "", ". URL: ").concat(e);
    },
    error: function error(t, e) {
      return "".concat(t, ". URL: ").concat(e);
    },
    append: function append(t, e, i) {
      return "".concat(i.length, " items. URL: ").concat(e);
    },
    last: function last(t, e) {
      return "URL: ".concat(e);
    },
    history: function history(t, e) {
      return "URL: ".concat(e);
    },
    pageIndex: function pageIndex(t, e) {
      return "current page determined to be: ".concat(t, " from ").concat(e);
    }
  };
  r.log = function (t, e) {
    if (!this.options.debug) return;
    var i = "[InfiniteScroll] ".concat(t),
        n = h[t];
    n && (i += ". " + n.apply(this, e)), console.log(i);
  }, r.updateMeasurements = function () {
    this.windowHeight = t.innerHeight;
    var e = this.element.getBoundingClientRect();
    this.top = e.top + t.scrollY;
  }, r.updateScroller = function () {
    var e = this.options.elementScroll;

    if (e) {
      if (this.scroller = !0 === e ? this.element : i.getQueryElement(e), !this.scroller) throw new Error("Unable to find elementScroll: ".concat(e));
    } else this.scroller = t;
  }, r.updateGetPath = function () {
    var t = this.options.path;
    if (!t) return void console.error("InfiniteScroll path option required. Set as: ".concat(t));

    var e = _typeof(t);

    "function" != e ? "string" == e && t.match("{{#}}") ? this.updateGetPathTemplate(t) : this.updateGetPathSelector(t) : this.getPath = t;
  }, r.updateGetPathTemplate = function (t) {
    var _this2 = this;

    this.getPath = function () {
      var e = _this2.pageIndex + 1;
      return t.replace("{{#}}", e);
    };

    var e = t.replace(/(\\\?|\?)/, "\\?").replace("{{#}}", "(\\d\\d?\\d?)"),
        i = new RegExp(e),
        n = location.href.match(i);
    n && (this.pageIndex = parseInt(n[1], 10), this.log("pageIndex", [this.pageIndex, "template string"]));
  };

  var a = [/^(.*?\/?page\/?)(\d\d?\d?)(.*?$)/, /^(.*?\/?\?page=)(\d\d?\d?)(.*?$)/, /(.*?)(\d\d?\d?)(?!.*\d)(.*?$)/],
      c = s.getPathParts = function (t) {
    if (t) {
      var _iterator2 = _createForOfIteratorHelper(a),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var _e = _step2.value;

          var _i3 = t.match(_e);

          if (_i3) {
            var _i4 = _slicedToArray(_i3, 4),
                _t3 = _i4[1],
                _e2 = _i4[2],
                _n = _i4[3];

            return {
              begin: _t3,
              index: _e2,
              end: _n
            };
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  };

  r.updateGetPathSelector = function (t) {
    var _this3 = this;

    var e = document.querySelector(t);
    if (!e) return void console.error("Bad InfiniteScroll path option. Next link not found: ".concat(t));
    var i = e.getAttribute("href"),
        n = c(i);
    if (!n) return void console.error("InfiniteScroll unable to parse next link href: ".concat(i));
    var o = n.begin,
        s = n.index,
        r = n.end;
    this.isPathSelector = !0, this.getPath = function () {
      return o + (_this3.pageIndex + 1) + r;
    }, this.pageIndex = parseInt(s, 10) - 1, this.log("pageIndex", [this.pageIndex, "next link"]);
  }, r.updateGetAbsolutePath = function () {
    var _this4 = this;

    var t = this.getPath();
    if (t.match(/^http/) || t.match(/^\//)) return void (this.getAbsolutePath = this.getPath);
    var _location = location,
        e = _location.pathname,
        i = t.match(/^\?/),
        n = e.substring(0, e.lastIndexOf("/")),
        o = i ? e : n + "/";

    this.getAbsolutePath = function () {
      return o + _this4.getPath();
    };
  }, s.create.hideNav = function () {
    var t = i.getQueryElement(this.options.hideNav);
    t && (t.style.display = "none", this.nav = t);
  }, s.destroy.hideNav = function () {
    this.nav && (this.nav.style.display = "");
  }, r.destroy = function () {
    this.allOff();

    for (var _t4 in s.destroy) {
      s.destroy[_t4].call(this);
    }

    delete this.element.infiniteScrollGUID, delete o[this.guid], n && this.$element && n.removeData(this.element, "infiniteScroll");
  }, s.throttle = function (t, e) {
    var i, n;
    return e = e || 200, function () {
      var _this5 = this;

      var o = +new Date(),
          s = arguments,
          r = function r() {
        i = o, t.apply(_this5, s);
      };

      i && o < i + e ? (clearTimeout(n), n = setTimeout(r, e)) : r();
    };
  }, s.data = function (t) {
    var e = (t = i.getQueryElement(t)) && t.infiniteScrollGUID;
    return e && o[e];
  }, s.setJQuery = function (t) {
    n = t;
  }, i.htmlInit(s, "infinite-scroll"), r._init = function () {};
  var u = t.jQueryBridget;
  return n && u && u("infiniteScroll", s, n), s;
}), function (t, e) {
  "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && module.exports ? module.exports = e(t, require("./core")) : e(t, t.InfiniteScroll);
}(window, function (t, e) {
  var i = e.prototype;
  Object.assign(e.defaults, {
    loadOnScroll: !0,
    checkLastPage: !0,
    responseBody: "text",
    domParseResponse: !0
  }), e.create.pageLoad = function () {
    this.canLoad = !0, this.on("scrollThreshold", this.onScrollThresholdLoad), this.on("load", this.checkLastPage), this.options.outlayer && this.on("append", this.onAppendOutlayer);
  }, i.onScrollThresholdLoad = function () {
    this.options.loadOnScroll && this.loadNextPage();
  };
  var n = new DOMParser();

  function o(t) {
    var e = document.createDocumentFragment();
    return t && e.append.apply(e, _toConsumableArray(t)), e;
  }

  return i.loadNextPage = function () {
    var _this6 = this;

    if (this.isLoading || !this.canLoad) return;
    var _this$options = this.options,
        t = _this$options.responseBody,
        e = _this$options.domParseResponse,
        i = _this$options.fetchOptions,
        o = this.getAbsolutePath();
    this.isLoading = !0, "function" == typeof i && (i = i());
    var s = fetch(o, i).then(function (i) {
      if (!i.ok) {
        var _t5 = new Error(i.statusText);

        return _this6.onPageError(_t5, o, i), {
          response: i
        };
      }

      return i[t]().then(function (s) {
        return "text" == t && e && (s = n.parseFromString(s, "text/html")), 204 == i.status ? (_this6.lastPageReached(s, o), {
          body: s,
          response: i
        }) : _this6.onPageLoad(s, o, i);
      });
    })["catch"](function (t) {
      _this6.onPageError(t, o);
    });
    return this.dispatchEvent("request", null, [o, s]), s;
  }, i.onPageLoad = function (t, e, i) {
    return this.options.append || (this.isLoading = !1), this.pageIndex++, this.loadCount++, this.dispatchEvent("load", null, [t, e, i]), this.appendNextPage(t, e, i);
  }, i.appendNextPage = function (t, e, i) {
    var _this7 = this;

    var _this$options2 = this.options,
        n = _this$options2.append,
        s = _this$options2.responseBody,
        r = _this$options2.domParseResponse;
    if (!("text" == s && r) || !n) return {
      body: t,
      response: i
    };
    var l = t.querySelectorAll(n),
        h = {
      body: t,
      response: i,
      items: l
    };
    if (!l || !l.length) return this.lastPageReached(t, e), h;

    var a = o(l),
        c = function c() {
      return _this7.appendItems(l, a), _this7.isLoading = !1, _this7.dispatchEvent("append", null, [t, e, l, i]), h;
    };

    return this.options.outlayer ? this.appendOutlayerItems(a, c) : c();
  }, i.appendItems = function (t, e) {
    t && t.length && (function (t) {
      var e = t.querySelectorAll("script");

      var _iterator3 = _createForOfIteratorHelper(e),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var _t6 = _step3.value;

          var _e3 = document.createElement("script"),
              _i5 = _t6.attributes;

          var _iterator4 = _createForOfIteratorHelper(_i5),
              _step4;

          try {
            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
              var _t7 = _step4.value;

              _e3.setAttribute(_t7.name, _t7.value);
            }
          } catch (err) {
            _iterator4.e(err);
          } finally {
            _iterator4.f();
          }

          _e3.innerHTML = _t6.innerHTML, _t6.parentNode.replaceChild(_e3, _t6);
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }(e = e || o(t)), this.element.appendChild(e));
  }, i.appendOutlayerItems = function (i, n) {
    var o = e.imagesLoaded || t.imagesLoaded;
    return o ? new Promise(function (t) {
      o(i, function () {
        var e = n();
        t(e);
      });
    }) : (console.error("[InfiniteScroll] imagesLoaded required for outlayer option"), void (this.isLoading = !1));
  }, i.onAppendOutlayer = function (t, e, i) {
    this.options.outlayer.appended(i);
  }, i.checkLastPage = function (t, e) {
    var i,
        _this$options3 = this.options,
        n = _this$options3.checkLastPage,
        o = _this$options3.path;

    if (n) {
      if ("function" == typeof o) {
        if (!this.getPath()) return void this.lastPageReached(t, e);
      }

      "string" == typeof n ? i = n : this.isPathSelector && (i = o), i && t.querySelector && (t.querySelector(i) || this.lastPageReached(t, e));
    }
  }, i.lastPageReached = function (t, e) {
    this.canLoad = !1, this.dispatchEvent("last", null, [t, e]);
  }, i.onPageError = function (t, e, i) {
    return this.isLoading = !1, this.canLoad = !1, this.dispatchEvent("error", null, [t, e, i]), t;
  }, e.create.prefill = function () {
    if (!this.options.prefill) return;
    var t = this.options.append;
    t ? (this.updateMeasurements(), this.updateScroller(), this.isPrefilling = !0, this.on("append", this.prefill), this.once("error", this.stopPrefill), this.once("last", this.stopPrefill), this.prefill()) : console.error("append option required for prefill. Set as :".concat(t));
  }, i.prefill = function () {
    var t = this.getPrefillDistance();
    this.isPrefilling = t >= 0, this.isPrefilling ? (this.log("prefill"), this.loadNextPage()) : this.stopPrefill();
  }, i.getPrefillDistance = function () {
    return this.options.elementScroll ? this.scroller.clientHeight - this.scroller.scrollHeight : this.windowHeight - this.element.clientHeight;
  }, i.stopPrefill = function () {
    this.log("stopPrefill"), this.off("append", this.prefill);
  }, e;
}), function (t, e) {
  "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && module.exports ? module.exports = e(t, require("./core"), require("fizzy-ui-utils")) : e(t, t.InfiniteScroll, t.fizzyUIUtils);
}(window, function (t, e, i) {
  var n = e.prototype;
  return Object.assign(e.defaults, {
    scrollThreshold: 400
  }), e.create.scrollWatch = function () {
    this.pageScrollHandler = this.onPageScroll.bind(this), this.resizeHandler = this.onResize.bind(this);
    var t = this.options.scrollThreshold;
    (t || 0 === t) && this.enableScrollWatch();
  }, e.destroy.scrollWatch = function () {
    this.disableScrollWatch();
  }, n.enableScrollWatch = function () {
    this.isScrollWatching || (this.isScrollWatching = !0, this.updateMeasurements(), this.updateScroller(), this.on("last", this.disableScrollWatch), this.bindScrollWatchEvents(!0));
  }, n.disableScrollWatch = function () {
    this.isScrollWatching && (this.bindScrollWatchEvents(!1), delete this.isScrollWatching);
  }, n.bindScrollWatchEvents = function (e) {
    var i = e ? "addEventListener" : "removeEventListener";
    this.scroller[i]("scroll", this.pageScrollHandler), t[i]("resize", this.resizeHandler);
  }, n.onPageScroll = e.throttle(function () {
    this.getBottomDistance() <= this.options.scrollThreshold && this.dispatchEvent("scrollThreshold");
  }), n.getBottomDistance = function () {
    var e, i;
    return this.options.elementScroll ? (e = this.scroller.scrollHeight, i = this.scroller.scrollTop + this.scroller.clientHeight) : (e = this.top + this.element.clientHeight, i = t.scrollY + this.windowHeight), e - i;
  }, n.onResize = function () {
    this.updateMeasurements();
  }, i.debounceMethod(e, "onResize", 150), e;
}), function (t, e) {
  "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && module.exports ? module.exports = e(t, require("./core"), require("fizzy-ui-utils")) : e(t, t.InfiniteScroll, t.fizzyUIUtils);
}(window, function (t, e, i) {
  var n = e.prototype;
  Object.assign(e.defaults, {
    history: "replace"
  });
  var o = document.createElement("a");
  return e.create.history = function () {
    if (!this.options.history) return;
    o.href = this.getAbsolutePath(), (o.origin || o.protocol + "//" + o.host) == location.origin ? this.options.append ? this.createHistoryAppend() : this.createHistoryPageLoad() : console.error("[InfiniteScroll] cannot set history with different origin: ".concat(o.origin, " on ").concat(location.origin, " . History behavior disabled."));
  }, n.createHistoryAppend = function () {
    this.updateMeasurements(), this.updateScroller(), this.scrollPages = [{
      top: 0,
      path: location.href,
      title: document.title
    }], this.scrollPage = this.scrollPages[0], this.scrollHistoryHandler = this.onScrollHistory.bind(this), this.unloadHandler = this.onUnload.bind(this), this.scroller.addEventListener("scroll", this.scrollHistoryHandler), this.on("append", this.onAppendHistory), this.bindHistoryAppendEvents(!0);
  }, n.bindHistoryAppendEvents = function (e) {
    var i = e ? "addEventListener" : "removeEventListener";
    this.scroller[i]("scroll", this.scrollHistoryHandler), t[i]("unload", this.unloadHandler);
  }, n.createHistoryPageLoad = function () {
    this.on("load", this.onPageLoadHistory);
  }, e.destroy.history = n.destroyHistory = function () {
    this.options.history && this.options.append && this.bindHistoryAppendEvents(!1);
  }, n.onAppendHistory = function (t, e, i) {
    if (!i || !i.length) return;
    var n = i[0],
        s = this.getElementScrollY(n);
    o.href = e, this.scrollPages.push({
      top: s,
      path: o.href,
      title: t.title
    });
  }, n.getElementScrollY = function (e) {
    if (this.options.elementScroll) return e.offsetTop - this.top;
    return e.getBoundingClientRect().top + t.scrollY;
  }, n.onScrollHistory = function () {
    var t = this.getClosestScrollPage();
    t != this.scrollPage && (this.scrollPage = t, this.setHistory(t.title, t.path));
  }, i.debounceMethod(e, "onScrollHistory", 150), n.getClosestScrollPage = function () {
    var e, i;
    e = this.options.elementScroll ? this.scroller.scrollTop + this.scroller.clientHeight / 2 : t.scrollY + this.windowHeight / 2;

    var _iterator5 = _createForOfIteratorHelper(this.scrollPages),
        _step5;

    try {
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
        var _t8 = _step5.value;
        if (_t8.top >= e) break;
        i = _t8;
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }

    return i;
  }, n.setHistory = function (t, e) {
    var i = this.options.history;
    i && history[i + "State"] && (history[i + "State"](null, t, e), this.options.historyTitle && (document.title = t), this.dispatchEvent("history", null, [t, e]));
  }, n.onUnload = function () {
    if (0 === this.scrollPage.top) return;
    var e = t.scrollY - this.scrollPage.top + this.top;
    this.destroyHistory(), scrollTo(0, e);
  }, n.onPageLoadHistory = function (t, e) {
    this.setHistory(t.title, e);
  }, e;
}), function (t, e) {
  "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && module.exports ? module.exports = e(t, require("./core"), require("fizzy-ui-utils")) : e(t, t.InfiniteScroll, t.fizzyUIUtils);
}(window, function (t, e, i) {
  var n = /*#__PURE__*/function () {
    function n(t, e) {
      _classCallCheck(this, n);

      this.element = t, this.infScroll = e, this.clickHandler = this.onClick.bind(this), this.element.addEventListener("click", this.clickHandler), e.on("request", this.disable.bind(this)), e.on("load", this.enable.bind(this)), e.on("error", this.hide.bind(this)), e.on("last", this.hide.bind(this));
    }

    _createClass(n, [{
      key: "onClick",
      value: function onClick(t) {
        t.preventDefault(), this.infScroll.loadNextPage();
      }
    }, {
      key: "enable",
      value: function enable() {
        this.element.removeAttribute("disabled");
      }
    }, {
      key: "disable",
      value: function disable() {
        this.element.disabled = "disabled";
      }
    }, {
      key: "hide",
      value: function hide() {
        this.element.style.display = "none";
      }
    }, {
      key: "destroy",
      value: function destroy() {
        this.element.removeEventListener("click", this.clickHandler);
      }
    }]);

    return n;
  }();

  return e.create.button = function () {
    var t = i.getQueryElement(this.options.button);
    t && (this.button = new n(t, this));
  }, e.destroy.button = function () {
    this.button && this.button.destroy();
  }, e.Button = n, e;
}), function (t, e) {
  "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && module.exports ? module.exports = e(t, require("./core"), require("fizzy-ui-utils")) : e(t, t.InfiniteScroll, t.fizzyUIUtils);
}(window, function (t, e, i) {
  var n = e.prototype;

  function o(t) {
    r(t, "none");
  }

  function s(t) {
    r(t, "block");
  }

  function r(t, e) {
    t && (t.style.display = e);
  }

  return e.create.status = function () {
    var t = i.getQueryElement(this.options.status);
    t && (this.statusElement = t, this.statusEventElements = {
      request: t.querySelector(".infinite-scroll-request"),
      error: t.querySelector(".infinite-scroll-error"),
      last: t.querySelector(".infinite-scroll-last")
    }, this.on("request", this.showRequestStatus), this.on("error", this.showErrorStatus), this.on("last", this.showLastStatus), this.bindHideStatus("on"));
  }, n.bindHideStatus = function (t) {
    var e = this.options.append ? "append" : "load";
    this[t](e, this.hideAllStatus);
  }, n.showRequestStatus = function () {
    this.showStatus("request");
  }, n.showErrorStatus = function () {
    this.showStatus("error");
  }, n.showLastStatus = function () {
    this.showStatus("last"), this.bindHideStatus("off");
  }, n.showStatus = function (t) {
    s(this.statusElement), this.hideStatusEventElements(), s(this.statusEventElements[t]);
  }, n.hideAllStatus = function () {
    o(this.statusElement), this.hideStatusEventElements();
  }, n.hideStatusEventElements = function () {
    for (var _t9 in this.statusEventElements) {
      o(this.statusEventElements[_t9]);
    }
  }, e;
}),
/*!
 * imagesLoaded v4.1.4
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */
function (t, e) {
  "use strict";

  "function" == typeof define && define.amd ? define(["ev-emitter/ev-emitter"], function (i) {
    return e(t, i);
  }) : "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) && module.exports ? module.exports = e(t, require("ev-emitter")) : t.imagesLoaded = e(t, t.EvEmitter);
}("undefined" != typeof window ? window : void 0, function (t, e) {
  "use strict";

  var i = t.jQuery,
      n = t.console;

  function o(t, e) {
    for (var i in e) {
      t[i] = e[i];
    }

    return t;
  }

  var s = Array.prototype.slice;

  function r(t, e, l) {
    if (!(this instanceof r)) return new r(t, e, l);
    var h,
        a = t;
    ("string" == typeof t && (a = document.querySelectorAll(t)), a) ? (this.elements = (h = a, Array.isArray(h) ? h : "object" == _typeof(h) && "number" == typeof h.length ? s.call(h) : [h]), this.options = o({}, this.options), "function" == typeof e ? l = e : o(this.options, e), l && this.on("always", l), this.getImages(), i && (this.jqDeferred = new i.Deferred()), setTimeout(this.check.bind(this))) : n.error("Bad element for imagesLoaded " + (a || t));
  }

  r.prototype = Object.create(e.prototype), r.prototype.options = {}, r.prototype.getImages = function () {
    this.images = [], this.elements.forEach(this.addElementImages, this);
  }, r.prototype.addElementImages = function (t) {
    "IMG" == t.nodeName && this.addImage(t), !0 === this.options.background && this.addElementBackgroundImages(t);
    var e = t.nodeType;

    if (e && l[e]) {
      for (var i = t.querySelectorAll("img"), n = 0; n < i.length; n++) {
        var o = i[n];
        this.addImage(o);
      }

      if ("string" == typeof this.options.background) {
        var s = t.querySelectorAll(this.options.background);

        for (n = 0; n < s.length; n++) {
          var r = s[n];
          this.addElementBackgroundImages(r);
        }
      }
    }
  };
  var l = {
    1: !0,
    9: !0,
    11: !0
  };

  function h(t) {
    this.img = t;
  }

  function a(t, e) {
    this.url = t, this.element = e, this.img = new Image();
  }

  return r.prototype.addElementBackgroundImages = function (t) {
    var e = getComputedStyle(t);
    if (e) for (var i = /url\((['"])?(.*?)\1\)/gi, n = i.exec(e.backgroundImage); null !== n;) {
      var o = n && n[2];
      o && this.addBackground(o, t), n = i.exec(e.backgroundImage);
    }
  }, r.prototype.addImage = function (t) {
    var e = new h(t);
    this.images.push(e);
  }, r.prototype.addBackground = function (t, e) {
    var i = new a(t, e);
    this.images.push(i);
  }, r.prototype.check = function () {
    var t = this;

    function e(e, i, n) {
      setTimeout(function () {
        t.progress(e, i, n);
      });
    }

    this.progressedCount = 0, this.hasAnyBroken = !1, this.images.length ? this.images.forEach(function (t) {
      t.once("progress", e), t.check();
    }) : this.complete();
  }, r.prototype.progress = function (t, e, i) {
    this.progressedCount++, this.hasAnyBroken = this.hasAnyBroken || !t.isLoaded, this.emitEvent("progress", [this, t, e]), this.jqDeferred && this.jqDeferred.notify && this.jqDeferred.notify(this, t), this.progressedCount == this.images.length && this.complete(), this.options.debug && n && n.log("progress: " + i, t, e);
  }, r.prototype.complete = function () {
    var t = this.hasAnyBroken ? "fail" : "done";

    if (this.isComplete = !0, this.emitEvent(t, [this]), this.emitEvent("always", [this]), this.jqDeferred) {
      var e = this.hasAnyBroken ? "reject" : "resolve";
      this.jqDeferred[e](this);
    }
  }, h.prototype = Object.create(e.prototype), h.prototype.check = function () {
    this.getIsImageComplete() ? this.confirm(0 !== this.img.naturalWidth, "naturalWidth") : (this.proxyImage = new Image(), this.proxyImage.addEventListener("load", this), this.proxyImage.addEventListener("error", this), this.img.addEventListener("load", this), this.img.addEventListener("error", this), this.proxyImage.src = this.img.src);
  }, h.prototype.getIsImageComplete = function () {
    return this.img.complete && this.img.naturalWidth;
  }, h.prototype.confirm = function (t, e) {
    this.isLoaded = t, this.emitEvent("progress", [this, this.img, e]);
  }, h.prototype.handleEvent = function (t) {
    var e = "on" + t.type;
    this[e] && this[e](t);
  }, h.prototype.onload = function () {
    this.confirm(!0, "onload"), this.unbindEvents();
  }, h.prototype.onerror = function () {
    this.confirm(!1, "onerror"), this.unbindEvents();
  }, h.prototype.unbindEvents = function () {
    this.proxyImage.removeEventListener("load", this), this.proxyImage.removeEventListener("error", this), this.img.removeEventListener("load", this), this.img.removeEventListener("error", this);
  }, a.prototype = Object.create(h.prototype), a.prototype.check = function () {
    this.img.addEventListener("load", this), this.img.addEventListener("error", this), this.img.src = this.url, this.getIsImageComplete() && (this.confirm(0 !== this.img.naturalWidth, "naturalWidth"), this.unbindEvents());
  }, a.prototype.unbindEvents = function () {
    this.img.removeEventListener("load", this), this.img.removeEventListener("error", this);
  }, a.prototype.confirm = function (t, e) {
    this.isLoaded = t, this.emitEvent("progress", [this, this.element, e]);
  }, r.makeJQueryPlugin = function (e) {
    (e = e || t.jQuery) && ((i = e).fn.imagesLoaded = function (t, e) {
      return new r(this, t, e).jqDeferred.promise(i(this));
    });
  }, r.makeJQueryPlugin(), r;
});